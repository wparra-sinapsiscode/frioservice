{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[loading,setLoading]=useState(true);// Credenciales básicas (simulando base de datos)\nconst CREDENTIALS={admin:{password:'admin123',userType:'admin'},tecnico:{password:'tecnico123',userType:'tecnico'},cliente:{password:'cliente123',userType:'cliente'}};// Técnicos adicionales\nconst TECHNICIANS=[{username:'jperez',password:'123',userType:'tecnico'},{username:'mlopez',password:'123',userType:'tecnico'},{username:'cgonzalez',password:'123',userType:'tecnico'},{username:'amartinez',password:'123',userType:'tecnico'}];// Clientes adicionales\nconst CLIENTS=[{username:'norte',password:'123',userType:'cliente'},{username:'buenamesarestaurante',password:'123',userType:'cliente'},{username:'rsanchez',password:'123',userType:'cliente'},{username:'hospitalsanjuan',password:'123',userType:'cliente'}];useEffect(()=>{// Verificar sesión guardada\nconst savedSession=sessionStorage.getItem('currentUser');if(savedSession){try{const userData=JSON.parse(savedSession);if(userData&&userData.loggedIn){setUser(userData);}}catch(e){console.error('Error al recuperar sesión:',e);sessionStorage.removeItem('currentUser');}}setLoading(false);},[]);const login=(username,password,userType)=>{// Validar campos\nif(!username||!password){return{success:false,message:'Por favor complete usuario y contraseña'};}let credentialsValid=false;let userData={username,userType};// Verificar credenciales predeterminadas\nif(userType in CREDENTIALS&&username===userType&&password===CREDENTIALS[userType].password){credentialsValid=true;}// Verificar técnicos\nelse if(userType==='tecnico'){const technician=TECHNICIANS.find(t=>t.username===username&&t.password===password);if(technician){credentialsValid=true;}}// Verificar clientes\nelse if(userType==='cliente'){const client=CLIENTS.find(c=>c.username===username&&c.password===password);if(client){credentialsValid=true;}}if(credentialsValid){// Guardar sesión\nconst userInfo={username,userType,loggedIn:true};sessionStorage.setItem('currentUser',JSON.stringify(userInfo));setUser(userInfo);return{success:true};}else{return{success:false,message:'Usuario o contraseña incorrectos'};}};const logout=()=>{sessionStorage.removeItem('currentUser');setUser(null);};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,logout,loading},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","loading","setLoading","CREDENTIALS","admin","password","userType","tecnico","cliente","TECHNICIANS","username","CLIENTS","savedSession","sessionStorage","getItem","userData","JSON","parse","loggedIn","e","console","error","removeItem","login","success","message","credentialsValid","technician","find","t","client","c","userInfo","setItem","stringify","logout","Provider","value"],"sources":["/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Credenciales básicas (simulando base de datos)\n  const CREDENTIALS = {\n    admin: { password: 'admin123', userType: 'admin' },\n    tecnico: { password: 'tecnico123', userType: 'tecnico' },\n    cliente: { password: 'cliente123', userType: 'cliente' }\n  };\n\n  // Técnicos adicionales\n  const TECHNICIANS = [\n    { username: 'jperez', password: '123', userType: 'tecnico' },\n    { username: 'mlopez', password: '123', userType: 'tecnico' },\n    { username: 'cgonzalez', password: '123', userType: 'tecnico' },\n    { username: 'amartinez', password: '123', userType: 'tecnico' }\n  ];\n\n  // Clientes adicionales\n  const CLIENTS = [\n    { username: 'norte', password: '123', userType: 'cliente' },\n    { username: 'buenamesarestaurante', password: '123', userType: 'cliente' },\n    { username: 'rsanchez', password: '123', userType: 'cliente' },\n    { username: 'hospitalsanjuan', password: '123', userType: 'cliente' }\n  ];\n\n  useEffect(() => {\n    // Verificar sesión guardada\n    const savedSession = sessionStorage.getItem('currentUser');\n    if (savedSession) {\n      try {\n        const userData = JSON.parse(savedSession);\n        if (userData && userData.loggedIn) {\n          setUser(userData);\n        }\n      } catch (e) {\n        console.error('Error al recuperar sesión:', e);\n        sessionStorage.removeItem('currentUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (username, password, userType) => {\n    // Validar campos\n    if (!username || !password) {\n      return { success: false, message: 'Por favor complete usuario y contraseña' };\n    }\n\n    let credentialsValid = false;\n    let userData = { username, userType };\n\n    // Verificar credenciales predeterminadas\n    if (userType in CREDENTIALS && \n        username === userType && \n        password === CREDENTIALS[userType].password) {\n      credentialsValid = true;\n    }\n    // Verificar técnicos\n    else if (userType === 'tecnico') {\n      const technician = TECHNICIANS.find(t => t.username === username && t.password === password);\n      if (technician) {\n        credentialsValid = true;\n      }\n    }\n    // Verificar clientes\n    else if (userType === 'cliente') {\n      const client = CLIENTS.find(c => c.username === username && c.password === password);\n      if (client) {\n        credentialsValid = true;\n      }\n    }\n\n    if (credentialsValid) {\n      // Guardar sesión\n      const userInfo = {\n        username,\n        userType,\n        loggedIn: true\n      };\n      \n      sessionStorage.setItem('currentUser', JSON.stringify(userInfo));\n      setUser(userInfo);\n      return { success: true };\n    } else {\n      return { success: false, message: 'Usuario o contraseña incorrectos' };\n    }\n  };\n\n  const logout = () => {\n    sessionStorage.removeItem('currentUser');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAElE,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAE5C;AACA,KAAM,CAAAY,WAAW,CAAG,CAClBC,KAAK,CAAE,CAAEC,QAAQ,CAAE,UAAU,CAAEC,QAAQ,CAAE,OAAQ,CAAC,CAClDC,OAAO,CAAE,CAAEF,QAAQ,CAAE,YAAY,CAAEC,QAAQ,CAAE,SAAU,CAAC,CACxDE,OAAO,CAAE,CAAEH,QAAQ,CAAE,YAAY,CAAEC,QAAQ,CAAE,SAAU,CACzD,CAAC,CAED;AACA,KAAM,CAAAG,WAAW,CAAG,CAClB,CAAEC,QAAQ,CAAE,QAAQ,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC5D,CAAEI,QAAQ,CAAE,QAAQ,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC5D,CAAEI,QAAQ,CAAE,WAAW,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC/D,CAAEI,QAAQ,CAAE,WAAW,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAChE,CAED;AACA,KAAM,CAAAK,OAAO,CAAG,CACd,CAAED,QAAQ,CAAE,OAAO,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC3D,CAAEI,QAAQ,CAAE,sBAAsB,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC1E,CAAEI,QAAQ,CAAE,UAAU,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CAC9D,CAAEI,QAAQ,CAAE,iBAAiB,CAAEL,QAAQ,CAAE,KAAK,CAAEC,QAAQ,CAAE,SAAU,CAAC,CACtE,CAEDd,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAoB,YAAY,CAAGC,cAAc,CAACC,OAAO,CAAC,aAAa,CAAC,CAC1D,GAAIF,YAAY,CAAE,CAChB,GAAI,CACF,KAAM,CAAAG,QAAQ,CAAGC,IAAI,CAACC,KAAK,CAACL,YAAY,CAAC,CACzC,GAAIG,QAAQ,EAAIA,QAAQ,CAACG,QAAQ,CAAE,CACjClB,OAAO,CAACe,QAAQ,CAAC,CACnB,CACF,CAAE,MAAOI,CAAC,CAAE,CACVC,OAAO,CAACC,KAAK,CAAC,4BAA4B,CAAEF,CAAC,CAAC,CAC9CN,cAAc,CAACS,UAAU,CAAC,aAAa,CAAC,CAC1C,CACF,CACApB,UAAU,CAAC,KAAK,CAAC,CACnB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAqB,KAAK,CAAGA,CAACb,QAAQ,CAAEL,QAAQ,CAAEC,QAAQ,GAAK,CAC9C;AACA,GAAI,CAACI,QAAQ,EAAI,CAACL,QAAQ,CAAE,CAC1B,MAAO,CAAEmB,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,yCAA0C,CAAC,CAC/E,CAEA,GAAI,CAAAC,gBAAgB,CAAG,KAAK,CAC5B,GAAI,CAAAX,QAAQ,CAAG,CAAEL,QAAQ,CAAEJ,QAAS,CAAC,CAErC;AACA,GAAIA,QAAQ,GAAI,CAAAH,WAAW,EACvBO,QAAQ,GAAKJ,QAAQ,EACrBD,QAAQ,GAAKF,WAAW,CAACG,QAAQ,CAAC,CAACD,QAAQ,CAAE,CAC/CqB,gBAAgB,CAAG,IAAI,CACzB,CACA;AAAA,IACK,IAAIpB,QAAQ,GAAK,SAAS,CAAE,CAC/B,KAAM,CAAAqB,UAAU,CAAGlB,WAAW,CAACmB,IAAI,CAACC,CAAC,EAAIA,CAAC,CAACnB,QAAQ,GAAKA,QAAQ,EAAImB,CAAC,CAACxB,QAAQ,GAAKA,QAAQ,CAAC,CAC5F,GAAIsB,UAAU,CAAE,CACdD,gBAAgB,CAAG,IAAI,CACzB,CACF,CACA;AAAA,IACK,IAAIpB,QAAQ,GAAK,SAAS,CAAE,CAC/B,KAAM,CAAAwB,MAAM,CAAGnB,OAAO,CAACiB,IAAI,CAACG,CAAC,EAAIA,CAAC,CAACrB,QAAQ,GAAKA,QAAQ,EAAIqB,CAAC,CAAC1B,QAAQ,GAAKA,QAAQ,CAAC,CACpF,GAAIyB,MAAM,CAAE,CACVJ,gBAAgB,CAAG,IAAI,CACzB,CACF,CAEA,GAAIA,gBAAgB,CAAE,CACpB;AACA,KAAM,CAAAM,QAAQ,CAAG,CACftB,QAAQ,CACRJ,QAAQ,CACRY,QAAQ,CAAE,IACZ,CAAC,CAEDL,cAAc,CAACoB,OAAO,CAAC,aAAa,CAAEjB,IAAI,CAACkB,SAAS,CAACF,QAAQ,CAAC,CAAC,CAC/DhC,OAAO,CAACgC,QAAQ,CAAC,CACjB,MAAO,CAAER,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,IAAM,CACL,MAAO,CAAEA,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,kCAAmC,CAAC,CACxE,CACF,CAAC,CAED,KAAM,CAAAU,MAAM,CAAGA,CAAA,GAAM,CACnBtB,cAAc,CAACS,UAAU,CAAC,aAAa,CAAC,CACxCtB,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAED,mBACEN,IAAA,CAACC,WAAW,CAACyC,QAAQ,EAACC,KAAK,CAAE,CAAEtC,IAAI,CAAEwB,KAAK,CAAEY,MAAM,CAAElC,OAAQ,CAAE,CAAAH,QAAA,CAC3DA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}