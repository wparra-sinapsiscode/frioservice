{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/src/context/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Credenciales básicas (simulando base de datos)\n  const CREDENTIALS = {\n    admin: {\n      password: 'admin123',\n      userType: 'admin'\n    },\n    tecnico: {\n      password: 'tecnico123',\n      userType: 'tecnico'\n    },\n    cliente: {\n      password: 'cliente123',\n      userType: 'cliente'\n    }\n  };\n\n  // Técnicos adicionales\n  const TECHNICIANS = [{\n    username: 'jperez',\n    password: '123',\n    userType: 'tecnico'\n  }, {\n    username: 'mlopez',\n    password: '123',\n    userType: 'tecnico'\n  }, {\n    username: 'cgonzalez',\n    password: '123',\n    userType: 'tecnico'\n  }, {\n    username: 'amartinez',\n    password: '123',\n    userType: 'tecnico'\n  }];\n\n  // Clientes adicionales\n  const CLIENTS = [{\n    username: 'norte',\n    password: '123',\n    userType: 'cliente'\n  }, {\n    username: 'buenamesarestaurante',\n    password: '123',\n    userType: 'cliente'\n  }, {\n    username: 'rsanchez',\n    password: '123',\n    userType: 'cliente'\n  }, {\n    username: 'hospitalsanjuan',\n    password: '123',\n    userType: 'cliente'\n  }];\n  useEffect(() => {\n    // Verificar sesión guardada\n    const savedSession = sessionStorage.getItem('currentUser');\n    if (savedSession) {\n      try {\n        const userData = JSON.parse(savedSession);\n        if (userData && userData.loggedIn) {\n          setUser(userData);\n        }\n      } catch (e) {\n        console.error('Error al recuperar sesión:', e);\n        sessionStorage.removeItem('currentUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = (username, password, userType) => {\n    // Validar campos\n    if (!username || !password) {\n      return {\n        success: false,\n        message: 'Por favor complete usuario y contraseña'\n      };\n    }\n    let credentialsValid = false;\n    let userData = {\n      username,\n      userType\n    };\n\n    // Verificar credenciales predeterminadas\n    if (userType in CREDENTIALS && username === userType && password === CREDENTIALS[userType].password) {\n      credentialsValid = true;\n    }\n    // Verificar técnicos\n    else if (userType === 'tecnico') {\n      const technician = TECHNICIANS.find(t => t.username === username && t.password === password);\n      if (technician) {\n        credentialsValid = true;\n      }\n    }\n    // Verificar clientes\n    else if (userType === 'cliente') {\n      const client = CLIENTS.find(c => c.username === username && c.password === password);\n      if (client) {\n        credentialsValid = true;\n      }\n    }\n    if (credentialsValid) {\n      // Guardar sesión\n      const userInfo = {\n        username,\n        userType,\n        loggedIn: true\n      };\n      sessionStorage.setItem('currentUser', JSON.stringify(userInfo));\n      setUser(userInfo);\n      return {\n        success: true\n      };\n    } else {\n      return {\n        success: false,\n        message: 'Usuario o contraseña incorrectos'\n      };\n    }\n  };\n  const logout = () => {\n    sessionStorage.removeItem('currentUser');\n    setUser(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      loading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","CREDENTIALS","admin","password","userType","tecnico","cliente","TECHNICIANS","username","CLIENTS","savedSession","sessionStorage","getItem","userData","JSON","parse","loggedIn","e","console","error","removeItem","login","success","message","credentialsValid","technician","find","t","client","c","userInfo","setItem","stringify","logout","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Credenciales básicas (simulando base de datos)\n  const CREDENTIALS = {\n    admin: { password: 'admin123', userType: 'admin' },\n    tecnico: { password: 'tecnico123', userType: 'tecnico' },\n    cliente: { password: 'cliente123', userType: 'cliente' }\n  };\n\n  // Técnicos adicionales\n  const TECHNICIANS = [\n    { username: 'jperez', password: '123', userType: 'tecnico' },\n    { username: 'mlopez', password: '123', userType: 'tecnico' },\n    { username: 'cgonzalez', password: '123', userType: 'tecnico' },\n    { username: 'amartinez', password: '123', userType: 'tecnico' }\n  ];\n\n  // Clientes adicionales\n  const CLIENTS = [\n    { username: 'norte', password: '123', userType: 'cliente' },\n    { username: 'buenamesarestaurante', password: '123', userType: 'cliente' },\n    { username: 'rsanchez', password: '123', userType: 'cliente' },\n    { username: 'hospitalsanjuan', password: '123', userType: 'cliente' }\n  ];\n\n  useEffect(() => {\n    // Verificar sesión guardada\n    const savedSession = sessionStorage.getItem('currentUser');\n    if (savedSession) {\n      try {\n        const userData = JSON.parse(savedSession);\n        if (userData && userData.loggedIn) {\n          setUser(userData);\n        }\n      } catch (e) {\n        console.error('Error al recuperar sesión:', e);\n        sessionStorage.removeItem('currentUser');\n      }\n    }\n    setLoading(false);\n  }, []);\n\n  const login = (username, password, userType) => {\n    // Validar campos\n    if (!username || !password) {\n      return { success: false, message: 'Por favor complete usuario y contraseña' };\n    }\n\n    let credentialsValid = false;\n    let userData = { username, userType };\n\n    // Verificar credenciales predeterminadas\n    if (userType in CREDENTIALS && \n        username === userType && \n        password === CREDENTIALS[userType].password) {\n      credentialsValid = true;\n    }\n    // Verificar técnicos\n    else if (userType === 'tecnico') {\n      const technician = TECHNICIANS.find(t => t.username === username && t.password === password);\n      if (technician) {\n        credentialsValid = true;\n      }\n    }\n    // Verificar clientes\n    else if (userType === 'cliente') {\n      const client = CLIENTS.find(c => c.username === username && c.password === password);\n      if (client) {\n        credentialsValid = true;\n      }\n    }\n\n    if (credentialsValid) {\n      // Guardar sesión\n      const userInfo = {\n        username,\n        userType,\n        loggedIn: true\n      };\n      \n      sessionStorage.setItem('currentUser', JSON.stringify(userInfo));\n      setUser(userInfo);\n      return { success: true };\n    } else {\n      return { success: false, message: 'Usuario o contraseña incorrectos' };\n    }\n  };\n\n  const logout = () => {\n    sessionStorage.removeItem('currentUser');\n    setUser(null);\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, login, logout, loading }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}