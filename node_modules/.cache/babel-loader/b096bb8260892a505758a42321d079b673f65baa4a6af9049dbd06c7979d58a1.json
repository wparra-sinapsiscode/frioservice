{"ast":null,"code":"import _objectSpread from\"/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{createContext,useState,useEffect}from'react';import{servicesData,filterServices}from'../utils/servicesMockData';import{quotesData,filterQuotes}from'../utils/quotesMockData';import{technicianData}from'../utils/mockData';import{calendarEvents,filterCalendarEvents}from'../utils/calendarMockData';import{jsx as _jsx}from\"react/jsx-runtime\";export const AppContext=/*#__PURE__*/createContext();export const AppProvider=_ref=>{let{children}=_ref;// Estado para servicios\nconst[services,setServices]=useState(servicesData);const[serviceFilters,setServiceFilters]=useState({status:'todos',type:'todos',technician:'todos',client:'todos',startDate:'',endDate:''});const[filteredServices,setFilteredServices]=useState(servicesData);// Estado para cotizaciones\nconst[quotes,setQuotes]=useState(quotesData);const[quoteFilters,setQuoteFilters]=useState({status:'todos',client:'todos',type:'todos',startDate:'',endDate:''});const[filteredQuotes,setFilteredQuotes]=useState(quotesData);// Estado para técnicos\nconst[technicians,setTechnicians]=useState(technicianData);// Estado para calendario\nconst[events,setEvents]=useState(calendarEvents);const[calendarFilters,setCalendarFilters]=useState({types:['programado','correctivo'],technician:'todos'});const[filteredEvents,setFilteredEvents]=useState(calendarEvents);// Efecto para filtrar servicios cuando cambien los filtros\nuseEffect(()=>{setFilteredServices(filterServices(services,serviceFilters));},[services,serviceFilters]);// Efecto para filtrar cotizaciones cuando cambien los filtros\nuseEffect(()=>{setFilteredQuotes(filterQuotes(quotes,quoteFilters));},[quotes,quoteFilters]);// Efecto para filtrar eventos de calendario cuando cambien los filtros\nuseEffect(()=>{setFilteredEvents(filterCalendarEvents(events,calendarFilters));},[events,calendarFilters]);// Función para agregar un nuevo servicio\nconst addService=newService=>{setServices(prev=>[newService,...prev]);};// Función para actualizar un servicio existente\nconst updateService=(id,updatedService)=>{setServices(prev=>prev.map(service=>service.id===id?_objectSpread(_objectSpread({},service),updatedService):service));};// Función para eliminar un servicio\nconst deleteService=id=>{setServices(prev=>prev.filter(service=>service.id!==id));};// Función para agregar una nueva cotización\nconst addQuote=newQuote=>{setQuotes(prev=>[newQuote,...prev]);};// Función para actualizar una cotización existente\nconst updateQuote=(id,updatedQuote)=>{setQuotes(prev=>prev.map(quote=>quote.id===id?_objectSpread(_objectSpread({},quote),updatedQuote):quote));};// Función para eliminar una cotización\nconst deleteQuote=id=>{setQuotes(prev=>prev.filter(quote=>quote.id!==id));};// Función para agregar un nuevo técnico\nconst addTechnician=newTechnician=>{setTechnicians(prev=>[...prev,newTechnician]);};// Función para actualizar un técnico existente\nconst updateTechnician=(id,updatedTechnician)=>{setTechnicians(prev=>prev.map(technician=>technician.id===id?_objectSpread(_objectSpread({},technician),updatedTechnician):technician));};// Función para eliminar un técnico\nconst deleteTechnician=id=>{setTechnicians(prev=>prev.filter(technician=>technician.id!==id));};// Función para agregar un nuevo evento de calendario\nconst addEvent=newEvent=>{setEvents(prev=>[...prev,newEvent]);};// Función para actualizar un evento existente\nconst updateEvent=(id,updatedEvent)=>{setEvents(prev=>prev.map(event=>event.id===id?_objectSpread(_objectSpread({},event),updatedEvent):event));};// Función para eliminar un evento\nconst deleteEvent=id=>{setEvents(prev=>prev.filter(event=>event.id!==id));};return/*#__PURE__*/_jsx(AppContext.Provider,{value:{// Servicios\nservices,filteredServices,serviceFilters,setServiceFilters,addService,updateService,deleteService,// Cotizaciones\nquotes,filteredQuotes,quoteFilters,setQuoteFilters,addQuote,updateQuote,deleteQuote,// Técnicos\ntechnicians,addTechnician,updateTechnician,deleteTechnician,// Eventos de calendario\nevents,filteredEvents,calendarFilters,setCalendarFilters,addEvent,updateEvent,deleteEvent},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","servicesData","filterServices","quotesData","filterQuotes","technicianData","calendarEvents","filterCalendarEvents","jsx","_jsx","AppContext","AppProvider","_ref","children","services","setServices","serviceFilters","setServiceFilters","status","type","technician","client","startDate","endDate","filteredServices","setFilteredServices","quotes","setQuotes","quoteFilters","setQuoteFilters","filteredQuotes","setFilteredQuotes","technicians","setTechnicians","events","setEvents","calendarFilters","setCalendarFilters","types","filteredEvents","setFilteredEvents","addService","newService","prev","updateService","id","updatedService","map","service","_objectSpread","deleteService","filter","addQuote","newQuote","updateQuote","updatedQuote","quote","deleteQuote","addTechnician","newTechnician","updateTechnician","updatedTechnician","deleteTechnician","addEvent","newEvent","updateEvent","updatedEvent","event","deleteEvent","Provider","value"],"sources":["/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/src/context/AppContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport { \n  servicesData, \n  filterServices \n} from '../utils/servicesMockData';\nimport { \n  quotesData, \n  filterQuotes \n} from '../utils/quotesMockData';\nimport { \n  technicianData \n} from '../utils/mockData';\nimport { \n  calendarEvents, \n  filterCalendarEvents \n} from '../utils/calendarMockData';\n\nexport const AppContext = createContext();\n\nexport const AppProvider = ({ children }) => {\n  // Estado para servicios\n  const [services, setServices] = useState(servicesData);\n  const [serviceFilters, setServiceFilters] = useState({\n    status: 'todos',\n    type: 'todos',\n    technician: 'todos',\n    client: 'todos',\n    startDate: '',\n    endDate: '',\n  });\n  const [filteredServices, setFilteredServices] = useState(servicesData);\n\n  // Estado para cotizaciones\n  const [quotes, setQuotes] = useState(quotesData);\n  const [quoteFilters, setQuoteFilters] = useState({\n    status: 'todos',\n    client: 'todos',\n    type: 'todos',\n    startDate: '',\n    endDate: '',\n  });\n  const [filteredQuotes, setFilteredQuotes] = useState(quotesData);\n\n  // Estado para técnicos\n  const [technicians, setTechnicians] = useState(technicianData);\n\n  // Estado para calendario\n  const [events, setEvents] = useState(calendarEvents);\n  const [calendarFilters, setCalendarFilters] = useState({\n    types: ['programado', 'correctivo'],\n    technician: 'todos',\n  });\n  const [filteredEvents, setFilteredEvents] = useState(calendarEvents);\n\n  // Efecto para filtrar servicios cuando cambien los filtros\n  useEffect(() => {\n    setFilteredServices(filterServices(services, serviceFilters));\n  }, [services, serviceFilters]);\n\n  // Efecto para filtrar cotizaciones cuando cambien los filtros\n  useEffect(() => {\n    setFilteredQuotes(filterQuotes(quotes, quoteFilters));\n  }, [quotes, quoteFilters]);\n\n  // Efecto para filtrar eventos de calendario cuando cambien los filtros\n  useEffect(() => {\n    setFilteredEvents(filterCalendarEvents(events, calendarFilters));\n  }, [events, calendarFilters]);\n\n  // Función para agregar un nuevo servicio\n  const addService = (newService) => {\n    setServices(prev => [newService, ...prev]);\n  };\n\n  // Función para actualizar un servicio existente\n  const updateService = (id, updatedService) => {\n    setServices(prev => \n      prev.map(service => \n        service.id === id ? { ...service, ...updatedService } : service\n      )\n    );\n  };\n\n  // Función para eliminar un servicio\n  const deleteService = (id) => {\n    setServices(prev => prev.filter(service => service.id !== id));\n  };\n\n  // Función para agregar una nueva cotización\n  const addQuote = (newQuote) => {\n    setQuotes(prev => [newQuote, ...prev]);\n  };\n\n  // Función para actualizar una cotización existente\n  const updateQuote = (id, updatedQuote) => {\n    setQuotes(prev => \n      prev.map(quote => \n        quote.id === id ? { ...quote, ...updatedQuote } : quote\n      )\n    );\n  };\n\n  // Función para eliminar una cotización\n  const deleteQuote = (id) => {\n    setQuotes(prev => prev.filter(quote => quote.id !== id));\n  };\n\n  // Función para agregar un nuevo técnico\n  const addTechnician = (newTechnician) => {\n    setTechnicians(prev => [...prev, newTechnician]);\n  };\n\n  // Función para actualizar un técnico existente\n  const updateTechnician = (id, updatedTechnician) => {\n    setTechnicians(prev => \n      prev.map(technician => \n        technician.id === id ? { ...technician, ...updatedTechnician } : technician\n      )\n    );\n  };\n\n  // Función para eliminar un técnico\n  const deleteTechnician = (id) => {\n    setTechnicians(prev => prev.filter(technician => technician.id !== id));\n  };\n\n  // Función para agregar un nuevo evento de calendario\n  const addEvent = (newEvent) => {\n    setEvents(prev => [...prev, newEvent]);\n  };\n\n  // Función para actualizar un evento existente\n  const updateEvent = (id, updatedEvent) => {\n    setEvents(prev => \n      prev.map(event => \n        event.id === id ? { ...event, ...updatedEvent } : event\n      )\n    );\n  };\n\n  // Función para eliminar un evento\n  const deleteEvent = (id) => {\n    setEvents(prev => prev.filter(event => event.id !== id));\n  };\n\n  return (\n    <AppContext.Provider \n      value={{ \n        // Servicios\n        services,\n        filteredServices,\n        serviceFilters,\n        setServiceFilters,\n        addService,\n        updateService,\n        deleteService,\n        \n        // Cotizaciones\n        quotes,\n        filteredQuotes,\n        quoteFilters,\n        setQuoteFilters,\n        addQuote,\n        updateQuote,\n        deleteQuote,\n        \n        // Técnicos\n        technicians,\n        addTechnician,\n        updateTechnician,\n        deleteTechnician,\n        \n        // Eventos de calendario\n        events,\n        filteredEvents,\n        calendarFilters,\n        setCalendarFilters,\n        addEvent,\n        updateEvent,\n        deleteEvent\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}