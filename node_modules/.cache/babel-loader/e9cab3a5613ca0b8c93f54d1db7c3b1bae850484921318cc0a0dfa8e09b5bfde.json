{"ast":null,"code":"// Datos simulados para el calendario\n\nexport const calendarEvents = [{\n  id: 1,\n  title: 'Mantenimiento Preventivo',\n  client: 'Norte Supermercados',\n  type: 'programado',\n  date: '2025-05-21',\n  time: '14:30',\n  technician: 'Juan Pérez',\n  equipment: ['Refrigerador Industrial']\n}, {\n  id: 2,\n  title: 'Inspección Congelador',\n  client: 'Buena Mesa Restaurante',\n  type: 'programado',\n  date: '2025-05-22',\n  time: '10:00',\n  technician: 'María López',\n  equipment: ['Congelador Vertical']\n}, {\n  id: 3,\n  title: 'Reparación Cámara Frigorífica',\n  client: 'Hospital San Juan',\n  type: 'correctivo',\n  date: '2025-05-22',\n  time: '09:00',\n  technician: 'Carlos González',\n  equipment: ['Cámara Frigorífica']\n}, {\n  id: 4,\n  title: 'Mantenimiento Frigobar',\n  client: 'Hotel Las Palmas',\n  type: 'programado',\n  date: '2025-05-24',\n  time: '15:00',\n  technician: 'Ana Martínez',\n  equipment: ['Frigobar']\n}, {\n  id: 5,\n  title: 'Reparación Urgente',\n  client: 'Buena Mesa Restaurante',\n  type: 'correctivo',\n  date: '2025-05-25',\n  time: '08:30',\n  technician: 'Juan Pérez',\n  equipment: ['Congelador Horizontal']\n}, {\n  id: 6,\n  title: 'Mantenimiento Sistema Central',\n  client: 'Norte Supermercados',\n  type: 'programado',\n  date: '2025-05-27',\n  time: '09:00',\n  technician: 'Carlos González',\n  equipment: ['Sistema Central de Refrigeración']\n}, {\n  id: 7,\n  title: 'Instalación Equipo Nuevo',\n  client: 'Hospital San Juan',\n  type: 'programado',\n  date: '2025-05-28',\n  time: '11:00',\n  technician: 'María López',\n  equipment: ['Cámara Frigorífica']\n}, {\n  id: 8,\n  title: 'Evaluación para Cotización',\n  client: 'Ricardo Sánchez',\n  type: 'programado',\n  date: '2025-05-29',\n  time: '16:00',\n  technician: 'Ana Martínez',\n  equipment: ['Refrigerador Doméstico']\n}];\n\n// Generar un mes de calendario (mayo 2025)\nexport const generateCalendarDays = (year, month) => {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n  const daysInMonth = lastDayOfMonth.getDate();\n  const firstDayOfWeek = firstDayOfMonth.getDay(); // 0 = domingo, 6 = sábado\n\n  // Calcular días del mes anterior\n  const prevMonthLastDay = new Date(year, month, 0).getDate();\n  const prevMonthDays = [];\n  for (let i = firstDayOfWeek - 1; i >= 0; i--) {\n    prevMonthDays.push({\n      day: prevMonthLastDay - i,\n      month: 'prev',\n      date: new Date(year, month - 1, prevMonthLastDay - i)\n    });\n  }\n\n  // Calcular días del mes actual\n  const currentMonthDays = [];\n  for (let i = 1; i <= daysInMonth; i++) {\n    currentMonthDays.push({\n      day: i,\n      month: 'current',\n      date: new Date(year, month, i),\n      isToday: i === 21 && month === 4 // Simulamos que hoy es 21 de mayo\n    });\n  }\n\n  // Calcular días del mes siguiente\n  const totalDaysDisplayed = 42; // 6 semanas\n  const nextMonthDays = [];\n  const remainingDays = totalDaysDisplayed - prevMonthDays.length - currentMonthDays.length;\n  for (let i = 1; i <= remainingDays; i++) {\n    nextMonthDays.push({\n      day: i,\n      month: 'next',\n      date: new Date(year, month + 1, i)\n    });\n  }\n  return [...prevMonthDays, ...currentMonthDays, ...nextMonthDays];\n};\n\n// Función para filtrar eventos por tipo y técnico\nexport const filterCalendarEvents = (events, filters) => {\n  return events.filter(event => {\n    // Filtrar por tipo\n    if (filters.types.length > 0 && !filters.types.includes(event.type)) {\n      return false;\n    }\n\n    // Filtrar por técnico\n    if (filters.technician !== 'todos' && event.technician !== filters.technician) {\n      return false;\n    }\n    return true;\n  });\n};\n\n// Función para obtener eventos para una fecha específica\nexport const getEventsForDate = (events, date) => {\n  const dateStr = date.toISOString().split('T')[0];\n  return events.filter(event => event.date === dateStr);\n};","map":{"version":3,"names":["calendarEvents","id","title","client","type","date","time","technician","equipment","generateCalendarDays","year","month","firstDayOfMonth","Date","lastDayOfMonth","daysInMonth","getDate","firstDayOfWeek","getDay","prevMonthLastDay","prevMonthDays","i","push","day","currentMonthDays","isToday","totalDaysDisplayed","nextMonthDays","remainingDays","length","filterCalendarEvents","events","filters","filter","event","types","includes","getEventsForDate","dateStr","toISOString","split"],"sources":["/mnt/c/Users/pc/Desktop/Eber/aplicativo - v1/frioservice-react/src/utils/calendarMockData.js"],"sourcesContent":["// Datos simulados para el calendario\n\nexport const calendarEvents = [\n  {\n    id: 1,\n    title: 'Mantenimiento Preventivo',\n    client: 'Norte Supermercados',\n    type: 'programado',\n    date: '2025-05-21',\n    time: '14:30',\n    technician: 'Juan Pérez',\n    equipment: ['Refrigerador Industrial'],\n  },\n  {\n    id: 2,\n    title: 'Inspección Congelador',\n    client: 'Buena Mesa Restaurante',\n    type: 'programado',\n    date: '2025-05-22',\n    time: '10:00',\n    technician: 'María López',\n    equipment: ['Congelador Vertical'],\n  },\n  {\n    id: 3,\n    title: 'Reparación Cámara Frigorífica',\n    client: 'Hospital San Juan',\n    type: 'correctivo',\n    date: '2025-05-22',\n    time: '09:00',\n    technician: 'Carlos González',\n    equipment: ['Cámara Frigorífica'],\n  },\n  {\n    id: 4,\n    title: 'Mantenimiento Frigobar',\n    client: 'Hotel Las Palmas',\n    type: 'programado',\n    date: '2025-05-24',\n    time: '15:00',\n    technician: 'Ana Martínez',\n    equipment: ['Frigobar'],\n  },\n  {\n    id: 5,\n    title: 'Reparación Urgente',\n    client: 'Buena Mesa Restaurante',\n    type: 'correctivo',\n    date: '2025-05-25',\n    time: '08:30',\n    technician: 'Juan Pérez',\n    equipment: ['Congelador Horizontal'],\n  },\n  {\n    id: 6,\n    title: 'Mantenimiento Sistema Central',\n    client: 'Norte Supermercados',\n    type: 'programado',\n    date: '2025-05-27',\n    time: '09:00',\n    technician: 'Carlos González',\n    equipment: ['Sistema Central de Refrigeración'],\n  },\n  {\n    id: 7,\n    title: 'Instalación Equipo Nuevo',\n    client: 'Hospital San Juan',\n    type: 'programado',\n    date: '2025-05-28',\n    time: '11:00',\n    technician: 'María López',\n    equipment: ['Cámara Frigorífica'],\n  },\n  {\n    id: 8,\n    title: 'Evaluación para Cotización',\n    client: 'Ricardo Sánchez',\n    type: 'programado',\n    date: '2025-05-29',\n    time: '16:00',\n    technician: 'Ana Martínez',\n    equipment: ['Refrigerador Doméstico'],\n  },\n];\n\n// Generar un mes de calendario (mayo 2025)\nexport const generateCalendarDays = (year, month) => {\n  const firstDayOfMonth = new Date(year, month, 1);\n  const lastDayOfMonth = new Date(year, month + 1, 0);\n  \n  const daysInMonth = lastDayOfMonth.getDate();\n  const firstDayOfWeek = firstDayOfMonth.getDay(); // 0 = domingo, 6 = sábado\n  \n  // Calcular días del mes anterior\n  const prevMonthLastDay = new Date(year, month, 0).getDate();\n  const prevMonthDays = [];\n  for (let i = firstDayOfWeek - 1; i >= 0; i--) {\n    prevMonthDays.push({\n      day: prevMonthLastDay - i,\n      month: 'prev',\n      date: new Date(year, month - 1, prevMonthLastDay - i)\n    });\n  }\n  \n  // Calcular días del mes actual\n  const currentMonthDays = [];\n  for (let i = 1; i <= daysInMonth; i++) {\n    currentMonthDays.push({\n      day: i,\n      month: 'current',\n      date: new Date(year, month, i),\n      isToday: i === 21 && month === 4 // Simulamos que hoy es 21 de mayo\n    });\n  }\n  \n  // Calcular días del mes siguiente\n  const totalDaysDisplayed = 42; // 6 semanas\n  const nextMonthDays = [];\n  const remainingDays = totalDaysDisplayed - prevMonthDays.length - currentMonthDays.length;\n  \n  for (let i = 1; i <= remainingDays; i++) {\n    nextMonthDays.push({\n      day: i,\n      month: 'next',\n      date: new Date(year, month + 1, i)\n    });\n  }\n  \n  return [...prevMonthDays, ...currentMonthDays, ...nextMonthDays];\n};\n\n// Función para filtrar eventos por tipo y técnico\nexport const filterCalendarEvents = (events, filters) => {\n  return events.filter(event => {\n    // Filtrar por tipo\n    if (filters.types.length > 0 && !filters.types.includes(event.type)) {\n      return false;\n    }\n    \n    // Filtrar por técnico\n    if (filters.technician !== 'todos' && event.technician !== filters.technician) {\n      return false;\n    }\n    \n    return true;\n  });\n};\n\n// Función para obtener eventos para una fecha específica\nexport const getEventsForDate = (events, date) => {\n  const dateStr = date.toISOString().split('T')[0];\n  return events.filter(event => event.date === dateStr);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}